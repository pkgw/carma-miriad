#  example for BASH (it will probably not work for classis /bin/sh)
#  -------------------------------------------------------------
#	Skeleton MIRRC file ... to be put in the local MIRIAD's
#	home directory.  It is essential that "standard" system
#	directories be in the user's search path (eg, to find
#	"awk").
# -------------------------------------------------------------
#  Environment variables to be locally specified:
#
#    $MIR ....... location of MIRIAD's home directory
#    $MIRHOST ... "sun3", "sun4", "linux", "mips", or "convex"
#    $MIRXINC ... include directory that contains the X11 and Xm
#                 directories.  If you don't have the Motif libraries,
#                 then this is the directory that contains just the
#                 X11 directory.  If these reside in different
#                 directories or additional directories need to be
#                 specified, include them in a space separated list,
#                 eg, "/usr/include/X11 /usr/dt/include"
#                 would search for X11 and Xm include directories
#                 first /usr/include/X11 and then
#                 /usr/dt/include.
#    $MIRXLIB ... directory that contains the X11 libraries (set to 
#                 null string if -X11 is not installed).  Note that
#                 additional directories can be specified in a
#                 space separated list, eg,
#                 "/usr/X11R6/lib /usr/tmp/lib/X11" will cause the
#                 linker to search first /usr/X11R6/lib and then
#                 /usr/tmp/lib/X11 to resolve external references.
#  -------------------------------------------------------------
#  The example shown below is a skeleton file.
#  The install.miriad script will patch this file and place it in $MIR
#  and rename it to $MIR/MIRSRC.$MIRHOST
#  -------------------------------------------------------------
if test -z "$MIR"; then
  export MIR="/mir_rootdir"
fi
export MIRHOST="mir_hosttype"
export MIRXINC="/usr/openwin/include"
export MIRXLIB="/usr/local/lib/X11"
export AIPSTV="XASIN"
if test -d $MIR/build; then
  export MIRBIN=$MIR/build/bin
  export MIRLIB=$MIR/build/lib
  source $MIRLIB/pgplot-miriad-remix/pgplot-config.sh
else
  export MIRBIN=$MIR/bin/$MIRHOST
  export MIRLIB=$MIR/lib/$MIRHOST
  export PGPLOT_DIR=$MIRLIB
fi
export MIRCAT=$MIR/cat
export MIRDEF=.
export MIRDOC=$MIR/doc
export MIRINC=$MIR/src/inc
export MIRPDOC=$MIR/doc/prog
export MIRPROG=$MIR/src/prog
export MIRSDOC=$MIR/doc/subs
export MIRSRC=$MIR/src
export MIRSUBS=$MIR/src/subs
export MIRTEL=MIRTEL:unknown

if [ `echo ":${PATH}:" | grep -c ":\.:"` = 1 ]; then
 export PATH=`echo ":${PATH}:" | sed -e "s&:.:&:.:${MIRBIN}:&"`
 export PATH=`echo $PATH | sed -e 's/^://' -e 's/:$//'`
else
 export PATH=${MIRBIN}:$PATH
fi

if [ -d $MIR/opt/bin ]; then
  export PATH=$MIR/opt/bin:$PATH
fi

alias   mirfind=mir.find
alias   mirhelp=mir.help
alias   mirindex=mir.index
alias   mirbug='mir.bug.csh bug'
alias   mirfeedback='mir.bug.csh feedback'
#  -------------------------------------------------------------
#  Karma, if present

if [ -f $MIR/borrow/karma/.karmarc ]; then
  export KARMABASE=$MIR/borrow/karma/
  . $KARMABASE/.karmarc
  if test $MIRHOST = "darwin"; then
    if test -z "$DYLD_LIBRARY_PATH"; then
      export DYLD_LIBRARY_PATH=${KARMABASE}/lib:${DYLD_LIBRARY_PATH}
    else
      export DYLD_LIBRARY_PATH=${KARMABASE}/lib
    fi
  fi
fi

# NEMO , if present
if [ -f $MIR/borrow/nemo/nemo_start.sh ]; then
 source $MIR/borrow/nemo/nemo_start.sh
fi

#
#  If the file $MIR/MIRRC.local exists, execute it now.
#
if [ -f $MIR/MIRSRC.local ]; then
  . $MIR/MIRSRC.local
fi
#
#  If the user's file $HOME/.mirrc exists, execute it now.
#
if ! test -z $HOME ; then
  if [ -f $HOME/.mirsrc ]; then
    . $HOME/.mirsrc
  fi
fi

#  -------------------------------------------------------------
